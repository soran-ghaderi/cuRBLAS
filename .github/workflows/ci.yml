name: CI

on:
  # We run CI on pushes to the main branch
  push:
    branches:
      - main
  # and on all pull requests to the main branch
  pull_request:
    branches:
      - main
  # as well as upon manual triggers through the 'Actions' tab of the Github UI
  workflow_dispatch:
env:
  CATCH2_VERSION: 2.13.10

jobs:
  build-and-test:
    name: Testing on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4



    - name: Install Catch2 (Linux + MacOS)
      if: runner.os != 'Windows'
      run: |
        git clone -b v$CATCH2_VERSION https://github.com/catchorg/Catch2.git
        cd Catch2
        mkdir build
        cd build
        cmake -DBUILD_TESTING=OFF  ..
        sudo cmake --build . --target install

    - name: Install Catch2 (Windows)
      if: runner.os == 'Windows'
      run: |
        git clone -b v$Env:CATCH2_VERSION https://github.com/catchorg/Catch2.git
        cd Catch2
        mkdir build
        cd build
        cmake -DBUILD_TESTING=OFF  ..
        cmake --build . --target install

    - name: make build directory
      run: cmake -E make_directory ${{ github.workspace }}/build

    - name: configure cmake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug -DBUILD_DOCS=OFF

    - name: build
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake --build .

    - name: run tests
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: ctest
  python-testing:
    name: Python package testing on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4


    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Run Python tests
      shell: bash
      run: |
        python -m pip install .
        python -m pip install -r requirements-dev.txt
        pytest


  coverage-test:
    name: Coverage Testing
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4


    - name: Install LCov
      run: |
        sudo apt-get install -y lcov


    - name: Install Catch2
      run: |
        git clone -b v$CATCH2_VERSION https://github.com/catchorg/Catch2.git
        cd Catch2
        mkdir build
        cd build
        cmake -DBUILD_TESTING=OFF  ..
        sudo cmake --build . --target install


    - name: Install Python package editable
      run: |
        python -m pip install scikit_build_core pybind11[global]
        python -m pip install --no-build-isolation --config-settings=build-dir="${{ github.workspace }}/build" --config-settings=cmake.define.CMAKE_CXX_FLAGS="--coverage" --config-settings=cmake.define.BUILD_TESTING="ON" -v -e .
        python -m pip install -r requirements-dev.txt
    
    - name: Run Python tests
      run: |
        python -m pytest --cov --cov-report=xml


    - name: run tests
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: ctest

    - name: collect coverage report
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        lcov --directory ./build/src --capture --output-file coverage.info  --ignore-errors mismatch

    - name: Upload C++ coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        files: ${{github.workspace}}/coverage.info,coverage.xml

